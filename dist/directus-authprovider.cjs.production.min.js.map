{"version":3,"file":"directus-authprovider.cjs.production.min.js","sources":["../src/dataProvider.ts","../src/helpers/auth.ts","../src/helpers/utility.ts"],"sourcesContent":["import {\n    ConditionalFilter,\n    CrudFilter,\n    CrudFilters,\n    CrudSorting,\n    DataProvider,\n    LogicalFilter,\n} from \"@pankod/refine-core\";\n\nconst operators = {\n    eq: \"_eq\",\n    ne: \"_neq\",\n    lt: \"_lt\",\n    gt: \"_gt\",\n    lte: \"_lte\",\n    gte: \"_gte\",\n    in: \"_in\",\n    nin: \"_nin\",\n    contains: \"_contains\",\n    containss: \"_icontains\",\n    ncontains: \"_ncontains\",\n    ncontainss: undefined,\n    null: \"_null\",\n    nnull: \"_nnull\",\n    between: \"_between\",\n    nbetween: \"_nbetween\",\n    startswith: \"_starts_with\",\n    startswiths: undefined,\n    nstartswith: \"_nstarts_with\",\n    nstartswiths: undefined,\n    endswith: \"_ends_with\",\n    endswiths: undefined,\n    nendswith: \"_nends_with\",\n    nendswiths: undefined,\n    or: \"_or\",\n    and: \"_and\",\n};\n\nconst strToObj = (str: string, val: any) => {\n    var i: number,\n        obj = {},\n        strarr = str.split(\".\");\n    var x: any = obj;\n    for (i = 0; i < strarr.length - 1; i++) {\n        x = x[strarr[i]] = {};\n    }\n    x[strarr[i]] = val;\n    return obj;\n};\n\nconst generateSort = (sort?: CrudSorting) => {\n    const _sort: string[] = [];\n\n    if (sort) {\n        sort.map((item) => {\n            if (item.order) {\n                item.order === \"desc\" ? _sort.push(`-${item.field}`) : _sort.push(`${item.field}`);\n            }\n        });\n    }\n\n    return _sort;\n};\n\nconst generateFilter = (filters?: CrudFilters) => {\n    const queryFilters: { [key: string]: any } = {};\n    let search: string = \"\";\n    if (filters) {\n        queryFilters[\"_and\"] = [];\n        filters.map((filter) => {\n            if (filter.operator !== \"or\" && filter.operator !== \"and\" && \"field\" in filter) {\n                const { field, operator, value } = filter;\n\n                if (value) {\n                    if (field === \"search\") {\n                        search = value;\n                    } else {\n                        let logicalFilter = generateLogicalFilter(filter);\n                        logicalFilter && queryFilters[\"_and\"].push(logicalFilter);\n                    }\n                }\n            } else {\n                let conditionalFilter = generateConditionalFilter(filter);\n                conditionalFilter && queryFilters[\"_and\"].push(conditionalFilter);\n            }\n        });\n    }\n\n    return { search: search, filters: queryFilters };\n};\n\n//Function to handle logical filters\nconst generateLogicalFilter = (item?: LogicalFilter) => {\n    if (item === undefined) return null;\n\n    const { field, operator, value } = item;\n    const directusOperator = operators[operator];\n    let queryField = `${field}.${directusOperator}`;\n    let filterObj = strToObj(queryField, value);\n\n    return filterObj;\n};\n\n//Function to handle conditional filters\nconst generateConditionalFilter = (item?: ConditionalFilter) => {\n    if (item === undefined) return null;\n\n    const { operator, value } = item;\n    const directusOperator = operators[operator];\n\n    const conditionalFilters: { [key: string]: any } = {};\n    conditionalFilters[directusOperator] = [];\n\n    value.map((item) => {\n        if (\"field\" in item) {\n            let logicalFilter = generateLogicalFilter(item);\n            logicalFilter && conditionalFilters[directusOperator].push(logicalFilter);\n        } else {\n            let conditionalFilter = generateConditionalFilter(item);\n            conditionalFilter && conditionalFilters[directusOperator].push(conditionalFilter);\n        }\n    });\n\n    return conditionalFilters;\n};\n\nexport const dataProvider = (directusClient: any): DataProvider => ({\n    getList: async ({ resource, pagination, filters, sort, metaData }) => {\n        const current = pagination?.current || 1;\n        const pageSize = pagination?.pageSize || 50;\n\n        const _sort = generateSort(sort);\n        const paramsFilters = generateFilter(filters);\n\n        const directus = directusClient.items(resource);\n\n        let status: any = { status: { _neq: \"archived\" } };\n\n        if (metaData?.archived === true) {\n            status = {};\n        }\n\n        let search = {};\n        if (paramsFilters.search) {\n            search = { search: paramsFilters.search };\n        }\n\n        let params: any = {\n            ...search,\n            filter: {\n                ...paramsFilters.filters,\n                ...status,\n            },\n            meta: \"*\",\n            page: current,\n            limit: pageSize,\n            fields: [\"*\"],\n            ...metaData,\n        };\n\n        let sortString: any = null;\n        if (sort && sort.length > 0) {\n            sortString = _sort.join(\",\");\n        }\n\n        if (sortString) {\n            params[\"sort\"] = sortString;\n        }\n\n        try {\n            const response: any = await directus.readByQuery(params);\n\n            return {\n                data: response.data,\n                total: response.meta.filter_count,\n            };\n        } catch (e) {\n            console.log(e);\n            throw new Error(e.errors && e.errors[0] && e.errors[0].message);\n        }\n    },\n\n    getMany: async ({ resource, ids, metaData }) => {\n        const directus = directusClient.items(resource);\n\n        let params: any = {\n            filter: {\n                id: { _in: ids },\n            },\n            fields: [\"*\"],\n            ...metaData,\n        };\n\n        try {\n            const response: any = await directus.readByQuery(params);\n\n            return {\n                data: response.data,\n                total: response.meta.filter_count,\n            };\n        } catch (e) {\n            console.log(e);\n            throw new Error(e.errors && e.errors[0] && e.errors[0].message);\n        }\n    },\n\n    create: async ({ resource, variables, metaData }) => {\n        const directus = directusClient.items(resource);\n\n        let params: any = {\n            ...variables,\n            ...metaData,\n        };\n\n        try {\n            const response: any = await directus.createOne(params);\n\n            return {\n                data: response,\n            };\n        } catch (e) {\n            console.log(e);\n            throw new Error(e.errors && e.errors[0] && e.errors[0].message);\n        }\n    },\n\n    update: async ({ resource, id, variables, metaData }) => {\n        const directus = directusClient.items(resource);\n\n        let params: any = {\n            ...variables,\n            ...metaData,\n        };\n\n        try {\n            const response: any = await directus.updateOne(id, params);\n\n            return {\n                data: response,\n            };\n        } catch (e) {\n            console.log(e);\n            throw new Error(e.errors && e.errors[0] && e.errors[0].message);\n        }\n    },\n\n    updateMany: async ({ resource, ids, variables, metaData }) => {\n        const directus = directusClient.items(resource);\n\n        let params: any = {\n            ...variables,\n            ...metaData,\n        };\n\n        try {\n            const response: any = await directus.updateMany(ids, params);\n\n            return {\n                data: response.data,\n            };\n        } catch (e) {\n            console.log(e);\n            throw new Error(e.errors && e.errors[0] && e.errors[0].message);\n        }\n    },\n\n    createMany: async ({ resource, variables, metaData }) => {\n        const directus = directusClient.items(resource);\n\n        let params: any = {\n            ...variables,\n            ...metaData,\n        };\n\n        try {\n            const response: any = await directus.createMany(params);\n\n            return {\n                data: response.data,\n            };\n        } catch (e) {\n            console.log(e);\n            throw new Error(e.errors && e.errors[0] && e.errors[0].message);\n        }\n    },\n\n    getOne: async ({ resource, id, metaData }) => {\n        const directus = directusClient.items(resource);\n\n        let params: any = {\n            ...metaData,\n        };\n\n        try {\n            const response: any = await directus.readOne(id, params);\n\n            return Promise.resolve({\n                data: response,\n            });\n        } catch (e) {\n            console.log(e);\n            throw new Error(e.errors && e.errors[0] && e.errors[0].message);\n        }\n    },\n\n    deleteOne: async ({ resource, id, metaData }) => {\n        const directus = directusClient.items(resource);\n\n        try {\n            if (metaData && metaData.deleteType === \"archive\") {\n                let params: any = {\n                    status: \"archived\",\n                    ...metaData,\n                };\n\n                const response: any = await directus.updateOne(id, params);\n\n                return {\n                    data: response,\n                };\n            } else {\n                const response: any = await directus.deleteOne(id);\n\n                return {\n                    data: response,\n                };\n            }\n        } catch (e) {\n            console.log(e);\n            throw new Error(e.errors && e.errors[0] && e.errors[0].message);\n        }\n    },\n\n    deleteMany: async ({ resource, ids, metaData }) => {\n        const directus = directusClient.items(resource);\n\n        try {\n            if (metaData && metaData.deleteType === \"archive\") {\n                let params: any = {\n                    status: \"archived\",\n                    ...metaData,\n                };\n                const response: any = await directus.updateMany(ids, params);\n\n                return {\n                    data: response,\n                };\n            } else {\n                const response: any = await directus.deleteMany(ids);\n\n                return {\n                    data: response.data,\n                };\n            }\n        } catch (e) {\n            console.log(e);\n            throw new Error(e.errors && e.errors[0] && e.errors[0].message);\n        }\n    },\n\n    getApiUrl: () => {\n        return directusClient.url;\n    },\n\n    custom: async ({ url, method, filters, sort, payload, query, headers }) => {\n        const directusTransport = directusClient.transport;\n\n        let response: any;\n        switch (method) {\n            case \"put\":\n                response = await directusTransport.put(url, payload, {\n                    headers: headers,\n                    params: query,\n                });\n                break;\n            case \"post\":\n                response = await directusTransport.post(url, payload, {\n                    headers: headers,\n                    params: query,\n                });\n                break;\n            case \"patch\":\n                response = await directusTransport.patch(url, payload, {\n                    headers: headers,\n                    params: query,\n                });\n                break;\n            case \"delete\":\n                response = await directusTransport.delete(url, {\n                    headers: headers,\n                    params: query,\n                });\n                break;\n            default:\n                response = await directusTransport.get(url, {\n                    headers: headers,\n                    params: query,\n                });\n                break;\n        }\n\n        return {\n            ...response,\n            data: response.data,\n        };\n    },\n});\n","export const AuthHelper = (directusClient: any) => {\n\treturn {\n\t\tlogin: async (identifier: string, password: string) => {\n\t\t\tlet response = await directusClient.auth.login({\n\t\t\t\temail: identifier,\n\t\t\t\tpassword: password\n\t\t\t});\n\n\t\t\treturn response;\n\t\t},\n\t\tme: async (metaData: {}) => {\n\t\t\tlet me = await directusClient.users.me.read(metaData);\n\t\t\treturn me;\n\t\t},\n\t\tsetToken: async (token: string) => {\n\t\t\tawait directusClient.auth.static(token);\n\t\t},\n\t\tgetToken: () => {\n\t\t\treturn directusClient.auth.token;\n\t\t},\n\t\tlogout: async () => {\n\t\t\treturn await directusClient.auth.logout();\n\t\t}\n\t};\n};\n","import { useState } from \"react\";\n\nexport interface MediaConfig {\n    maxCount: number;\n    name: string;\n    multiple: boolean;\n    normalize?: (item: any) => any;\n};\n\nexport interface ValuePropsConfig {\n    data: any;\n    imageUrl: string;\n    getFileUrl?: ((item: any) => any);\n    getFileTitle?: ((item: any) => any);\n};\n\n\nexport const getValueProps = (valueProps: ValuePropsConfig) => {\n    const { data, imageUrl, getFileUrl, getFileTitle } = valueProps;\n\n    if (!data) {\n        return { fileList: [] };\n    }\n\n    const files = {\n        file: data.file,\n        fileList:\n            data.fileList ??\n            (Array.isArray(data) ? data : [data]).map((item: any) => {\n\n                const file: any = {\n                    name: getFileTitle ? getFileTitle(item) : item.title,\n                    url: getFileUrl ? getFileUrl(item) : `${imageUrl}assets/${item.id}`,\n                    percent: item.percent,\n                    size: item.filesize,\n                    status: 'done',\n                    type: item.type,\n                    uid: item.id\n                };\n\n                return file;\n\n            }),\n    };\n\n    return files;\n};\n\n\nexport const useDirectusUpload = (mediaConfigList: MediaConfig[], directusClient: any) => {\n    const [uploadedFileIds] = useState<string[]>([]);\n    const [fileList, setFileList] = useState<any[]>([]);\n\n    const beforeUpload = (_file: any, files: any[], maxCount: number): boolean => {\n        const totalFiles = fileList.length;\n        const filesCount = files.length;\n\n        if (totalFiles + filesCount > maxCount) {\n            const excessFileCount = totalFiles + filesCount - maxCount;\n            // convert negative\n            const deleteItemCount = excessFileCount - excessFileCount * 2;\n            files.splice(deleteItemCount);\n        }\n\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        setFileList([...fileList, ...files]);\n\n        return true;\n    };\n\n\n    const customRequest = async ({\n        file,\n        onError,\n        onSuccess,\n    }: any) => {\n        try {\n            const form = new FormData();\n            form.append(\"file\", file);\n\n            const data = await directusClient.files.createOne(form);\n            onSuccess?.({ data }, new XMLHttpRequest());\n        } catch (error) {\n            onError?.(new Error(\"Upload Error\"));\n        }\n    };\n\n\n    const getUploadProps = (fieldName: string) => {\n\n        const mediaConfig = mediaConfigList.filter((config: any) => config.name === fieldName)[0];\n\n        return {\n            uploadedFileIds,\n            beforeUpload: (_file: any, files: any[]) => beforeUpload(_file, files, mediaConfig.maxCount),\n            fileList,\n            maxCount: mediaConfig.maxCount,\n            customRequest,\n        };\n    };\n\n    return getUploadProps;\n};\n\n\nexport const mediaUploadMapper = (params: any, mediaConfigList: MediaConfig[]) => {\n\n    for (const item of Object.keys(params)) {\n        if (params[item]) {\n            const param = params[item].fileList;\n            const isMediaField = Array.isArray(param);\n            if (isMediaField) {\n                const mediaConfig = mediaConfigList.filter((config: any) => config.name === item)[0];\n                const ids = [];\n                for (const key of Object.keys(param)) {\n                    if (param[key].response) {\n                        if (mediaConfig.normalize) {\n                            ids.push(mediaConfig.normalize(param[key].response.data.id));\n                        }\n                        else {\n                            ids.push(param[key].response.data.id);\n                        }\n                    } else {\n                        ids.push(param[key].uid);\n                    }\n                }\n\n                if (mediaConfig.multiple) {\n                    params[item] = ids;\n                }\n                else {\n                    params[item] = ids[0];\n                }\n            }\n        }\n    }\n\n    return params;\n};"],"names":["operators","eq","ne","lt","gt","lte","gte","in","nin","contains","containss","ncontains","ncontainss","undefined","null","nnull","between","nbetween","startswith","startswiths","nstartswith","nstartswiths","endswith","endswiths","nendswith","nendswiths","or","and","generateSort","sort","_sort","map","item","order","push","field","generateFilter","filters","queryFilters","search","filter","operator","value","logicalFilter","generateLogicalFilter","conditionalFilter","generateConditionalFilter","str","val","i","obj","strarr","split","x","length","strToObj","directusOperator","conditionalFilters","directusClient","login","_login","_asyncToGenerator","_regeneratorRuntime","mark","_callee","identifier","password","wrap","_context","prev","next","auth","email","abrupt","sent","stop","_x","_x2","apply","arguments","me","_me","_callee2","metaData","_context2","users","read","_x3","setToken","_setToken","_callee3","token","_context3","_x4","getToken","logout","_logout","_callee4","_context4","getList","_getList","_ref","resource","pagination","current","pageSize","paramsFilters","directus","status","params","sortString","response","items","_neq","archived","_extends","meta","page","limit","fields","join","readByQuery","data","total","filter_count","t0","console","log","Error","errors","message","getMany","_getMany","_ref2","ids","id","_in","create","_create","_ref3","variables","createOne","update","_update","_ref4","updateOne","updateMany","_updateMany","_callee5","_ref5","_context5","_x5","createMany","_createMany","_callee6","_ref6","_context6","_x6","getOne","_getOne","_callee7","_ref7","_context7","readOne","Promise","resolve","_x7","deleteOne","_deleteOne","_callee8","_ref8","_context8","deleteType","_x8","deleteMany","_deleteMany","_callee9","_ref9","_context9","_x9","getApiUrl","url","custom","_custom","_callee10","_ref10","payload","query","headers","directusTransport","_context10","transport","method","put","post","patch","get","_x10","valueProps","imageUrl","getFileUrl","getFileTitle","file","fileList","_data$fileList","Array","isArray","name","title","percent","size","filesize","type","uid","mediaConfigList","_Object$keys","_i","param","mediaConfig","config","_i2","_Object$keys2","Object","keys","key","normalize","multiple","_loop","uploadedFileIds","useState","_useState2","setFileList","customRequest","onError","onSuccess","form","FormData","append","files","XMLHttpRequest","fieldName","beforeUpload","_file","maxCount","totalFiles","filesCount","excessFileCount","splice","concat"],"mappings":"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"}